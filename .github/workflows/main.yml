# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [master]
  pull_request:
    branches: [master]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: 🧰 Setup Node.js environment
        uses: actions/setup-node@v2.4.0

      - name: 📁 Create uploads directory
        run: mkdir uploads

      - name: ✈ Skip preflight check
        run: echo 'SKIP_PREFLIGHT_CHECK=true' > frontend/.env

      - name: 📦 Install dependencies
        run: npm install && npm install --prefix frontend

      - name: 🚨 Run tests
        run: npm run test:ci

      # Működik az alábbi deployment stratégia (lásd https://github.com/pmihaly/limecrm/commit/8cf150d6b4c09202f09dbb5582f39b15138e0289),
      # de a digitalocean instancem 1G memóriája nem bírja a projektet,
      # a személyes szerverem ssh-ét pedig nem szeretném a nagyvilág felé kinyitni, így oda manuálisan deployolok
      # - name: 🔑 Install SSH key
      #   uses: shimataro/ssh-key-action@v2
      #   with:
      #     key: ${{ secrets.SSH_KEY }}
      #     known_hosts: ${{ secrets.KNOWN_HOSTS }}

      # - name: ♻ Rebuild containers
      #   run: ssh ${{ secrets.SSH_USER_AT_HOST }} "cd /var/www/limecrm && git pull && docker-compose up --build -d"
